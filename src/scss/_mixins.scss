// Polyfills box-sizing in ie7
@mixin oUseragentIe7BoxSizing () {
	*behavior: url(oAssetsUse("polyfills/boxsizing.htc", $o-useragent-assets-path, $o-useragent-version));
}

// outputs style rules wrapped by a selector, or nothing if the selector is null
@mixin _oUseragentWrapInSelector ($selector:null) {
	@if($selector) {
		#{$selector} { @content }
	} 
}

// appends a useragent selector to an existing list of selectors
@function _oUseragentAppendSelector ($aggregate, $useragent, $version: null) {
	@if ($version) {
		$useragent: $useragent$version;
	}
	@if(not index($_o-useragent-targeted-useragents, $useragent)) {
		$_o-useragent-targeted-useragents: append($_o-useragent-targeted-useragents, $useragent);
		@debug "Styles are being targeted at #{$useragent}.  To apply them, extend %o-useragent-#{$useragent} in a prefix, and apply the class to your HTML tag when #{$useragent} is detected.";
	}
	$selector: o-useragent- + $useragent;
	$aggregate: append($aggregate, #{'%#{$selector}'}, comma);
	@if (not $o-useragent-is-silent) {
		$aggregate: append($aggregate, #{'.#{$selector}'}, comma);
	} 
	@return $aggregate;
}

// wraps styles aimed at a particular user agent in a class (definable at product level but defaulting to o-useragent-{useragent name})
@mixin oUseragentTarget ($useragents, $versions: null) {

	$selector: null;
	$ie-selector: null;
	
	@if (count($useragents) == 1 and $versions) {
		// multiple versions of a single useragent	
		@each $version in $versions {
			$selector: _oUseragentAppendSelector($selector, $useragents, $version);
		}		
	} @else {
		// multiple useragents
		@each $useragent in $useragents {
			$selector: _oUseragentAppendSelector($selector, $useragent);
		}
	}
	@include _oUseragentWrapInSelector($selector) { @content };
}

@mixin _oUseragentSinglePrefix ($prefix, $prop, $val, $apply-prefix-to-value: false) {
    @if ($apply-prefix-to-value) {
        $val: #{$prefix + $val};
    }
    #{$prefix + $prop}: $val;
}

@mixin oUseragentPrefixer ($prop, $val, $apply-prefix-to-value: false, $prefixes: $o-useragent-vendor-prefixes) {
	@each $prefix in $prefixes {
		@if (contains($o-useragent-vendor-prefixes, $prefix)) {
		    @include _oUseragentSinglePrefix(#{'-' + $prefix + '-'}, $prop, $val, $apply-prefix-to-value);
		}
	}
    #{$prop}: $val;
}